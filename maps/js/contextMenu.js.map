{"version":3,"sources":["contextMenu.js"],"names":["clickInsideElement","e","className","el","srcElement","target","classList","contains","parentNode","taskItemInContext","clickCoords","clickCoordsX","clickCoordsY","menuWidth","menuHeight","windowWidth","windowHeight","contextMenuItemClassName","contextMenuLinkClassName","contextMenuActive","taskItemClassName","menu","document","querySelector","menuState","querySelectorAll","toggleMenuOff","remove","addEventListener","itemClickedEvent","preventDefault","itemLabel","Array","from","getElementsByClassName","forEach","getAttribute","onclick","deleteItem","renameItem","pinToHome","console","log","restrictContextItems","add","posx","posy","window","event","pageX","pageY","clientX","clientY","body","scrollLeft","documentElement","scrollTop","x","y","getPosition","offsetWidth","offsetHeight","style","left","top","link","clickeElIsLink","button","which","onkeyup","keyCode","onresize"],"mappings":"CAEA,WACI,aAWA,SAASA,EAAmBC,EAAGC,GAC3B,IAAIC,EAAKF,EAAEG,YAAcH,EAAEI,OAE3B,GAAIF,EAAGG,UAAUC,SAASL,GACtB,OAAOC,EAEP,KAAOA,EAAKA,EAAGK,YACX,GAAIL,EAAGG,WAAaH,EAAGG,UAAUC,SAASL,GACtC,OAAOC,EAKnB,OAAO,EAkCX,IAMIM,EAEAC,EACAC,EACAC,EAKAC,EACAC,EAKAC,EACAC,EArBAC,EAA2B,qBAC3BC,EAA2B,qBAC3BC,EAAoB,uBAEpBC,EAAoB,OAOpBC,EAAOC,SAASC,cAAc,iBAE9BC,GADYH,EAAKI,iBAAiB,uBACtB,GAkHhB,SAASC,IACa,IAAdF,IACAA,EAAY,EACZH,EAAKf,UAAUqB,OAAOR,IA5F1BG,SAASM,iBAAiB,cAAe,SAAUC,GAE/C,GADApB,EAAoBT,EAAmB6B,EAAkBT,GAClC,CACnBS,EAAiBC,iBACjB,IAAIC,EAAYF,EAAiBxB,OACjC2B,MAAMC,KAAKX,SAASY,uBAAuBjB,IAA2BkB,QAClEhC,IACI,OAAQA,EAAGiC,aAAa,gBACpB,IAAK,SACDjC,EAAGkC,QAAU,MACTC,WAAWP,KAEf,MACJ,IAAK,SACD5B,EAAGkC,QAAU,MACTE,WAAWR,KAEf,MACJ,IAAK,YACD5B,EAAGkC,QAAU,MACTG,UAAUT,QAyDpBA,EAnDGA,EAoDH,IAAdP,IACAiB,QAAQC,IAAI,+BACZC,qBAAqBZ,GACrBP,EAAY,EACZH,EAAKf,UAAUsC,IAAIzB,IAoBvBT,EAtKJ,SAAqBT,GACjB,IAAI4C,EAAO,EACPC,EAAO,EAYX,OAVK7C,IAAOA,EAAI8C,OAAOC,OAEnB/C,EAAEgD,OAAShD,EAAEiD,OACbL,EAAO5C,EAAEgD,MACTH,EAAO7C,EAAEiD,QACFjD,EAAEkD,SAAWlD,EAAEmD,WACtBP,EAAO5C,EAAEkD,QAAU7B,SAAS+B,KAAKC,WAAahC,SAASiC,gBAAgBD,WACvER,EAAO7C,EAAEmD,QAAU9B,SAAS+B,KAAKG,UAAYlC,SAASiC,gBAAgBC,YAItEC,EAAGZ,EACHa,EAAGZ,GAsJOa,CA3EO9B,GA4ErBlB,EAAeD,EAAY+C,EAE3B7C,EAAeF,EAAYgD,EAG3B7C,EAAYQ,EAAKuC,YAAc,EAC/B9C,EAAaO,EAAKwC,aAAe,EAIjC9C,EAAcO,SAASiC,gBAAgBK,YACvC5C,EAAeM,SAASiC,gBAAgBM,aAGpCxC,EAAKyC,MAAMC,KADVhD,EAAcJ,EAAgBE,EACbE,EAAcF,EAAY,KAE1BF,EAAe,KAIjCU,EAAKyC,MAAME,IADVhD,EAAeJ,EAAgBE,EACfE,EAAeF,EAAa,KAE5BF,EAAe,UAhG5BH,EAAoB,KACpBiB,IAuEZ,IAxBsBK,IAtClBT,SAASM,iBAAiB,QAAS,SAAU3B,GACzC,IA8FkBgE,EA9FdC,EAAiBlE,EAAmBC,EAAGiB,GAE3C,GAAIgD,EACAjE,EAAE6B,iBA2FYmC,EA1FGC,EA2FzBzB,QAAQC,IAAI,aAAejC,EAAkB2B,aAAa,WAAa,mBAAqB6B,EAAK7B,aAAa,gBAC9GV,QA3FW,CACH,IAAIyC,EAASlE,EAAEmE,OAASnE,EAAEkE,OACX,IAAXA,GACAzC,OAUZqB,OAAOsB,QAAU,SAAUpE,GACL,KAAdA,EAAEqE,SACF5C,KASRqB,OAAOwB,SAAW,SAAUtE,GACxByB,KAxKZ","file":"../../TextReader/js/contextMenu.js","sourcesContent":["// Source: https://www.sitepoint.com/building-custom-right-click-context-menu-javascript/\r\n// Author: Nick Salloum\r\n(function () {\r\n    \"use strict\";\r\n    // H E L P E R    F U N C T I O N S\r\n\r\n    /**\r\n     * Function to check if we clicked inside an element with a particular class\r\n     * name.\r\n     * \r\n     * @param {Object} e The event\r\n     * @param {String} className The class name to check against\r\n     * @return {Boolean}\r\n     */\r\n    function clickInsideElement(e, className) {\r\n        var el = e.srcElement || e.target;\r\n\r\n        if (el.classList.contains(className)) {\r\n            return el;\r\n        } else {\r\n            while (el = el.parentNode) {\r\n                if (el.classList && el.classList.contains(className)) {\r\n                    return el;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get's exact position of event.\r\n     * \r\n     * @param {Object} e The event passed in\r\n     * @return {Object} Returns the x and y position\r\n     */\r\n    function getPosition(e) {\r\n        var posx = 0;\r\n        var posy = 0;\r\n\r\n        if (!e) var e = window.event;\r\n\r\n        if (e.pageX || e.pageY) {\r\n            posx = e.pageX;\r\n            posy = e.pageY;\r\n        } else if (e.clientX || e.clientY) {\r\n            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n        }\r\n\r\n        return {\r\n            x: posx,\r\n            y: posy\r\n        }\r\n    }\r\n\r\n    // C O R E    F U N C T I O N S\r\n\r\n    /**\r\n     * Variables.\r\n     */\r\n    var contextMenuClassName = \"context-menu\";\r\n    var contextMenuItemClassName = \"context-menu__item\";\r\n    var contextMenuLinkClassName = \"context-menu__link\";\r\n    var contextMenuActive = \"context-menu--active\";\r\n\r\n    var taskItemClassName = \"item\";\r\n    var taskItemInContext;\r\n\r\n    var clickCoords;\r\n    var clickCoordsX;\r\n    var clickCoordsY;\r\n\r\n    var menu = document.querySelector(\"#context-menu\");\r\n    var menuItems = menu.querySelectorAll(\".context-menu__item\");\r\n    var menuState = 0;\r\n    var menuWidth;\r\n    var menuHeight;\r\n    var menuPosition;\r\n    var menuPositionX;\r\n    var menuPositionY;\r\n\r\n    var windowWidth;\r\n    var windowHeight;\r\n\r\n    /**\r\n     * Initialise our application's code.\r\n     */\r\n    function init() {\r\n        contextListener();\r\n        clickListener();\r\n        keyupListener();\r\n        resizeListener();\r\n    }\r\n\r\n    /**\r\n     * Listens for contextmenu events.\r\n     */\r\n    function contextListener() {\r\n        // the event object itemClickedEvent's target is the item label in the menu\r\n        document.addEventListener(\"contextmenu\", function (itemClickedEvent) {\r\n            taskItemInContext = clickInsideElement(itemClickedEvent, taskItemClassName);\r\n            if (taskItemInContext) {\r\n                itemClickedEvent.preventDefault();\r\n                let itemLabel = itemClickedEvent.target;\r\n                Array.from(document.getElementsByClassName(contextMenuItemClassName)).forEach(\r\n                    el => {\r\n                        switch (el.getAttribute(\"data-action\")) {\r\n                            case \"delete\":\r\n                                el.onclick = () => {\r\n                                    deleteItem(itemLabel);\r\n                                };\r\n                                break;\r\n                            case \"rename\":\r\n                                el.onclick = () => {\r\n                                    renameItem(itemLabel);\r\n                                };\r\n                                break;\r\n                            case \"pinToHome\":\r\n                                el.onclick = () => {\r\n                                    pinToHome(itemLabel);\r\n                                };\r\n                                break;\r\n                        }\r\n                    }\r\n                )\r\n                toggleMenuOn(itemLabel);\r\n                positionMenu(itemClickedEvent);\r\n            } else {\r\n                taskItemInContext = null;\r\n                toggleMenuOff();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listens for click events.\r\n     */\r\n    function clickListener() {\r\n        document.addEventListener(\"click\", function (e) {\r\n            var clickeElIsLink = clickInsideElement(e, contextMenuLinkClassName);\r\n\r\n            if (clickeElIsLink) {\r\n                e.preventDefault();\r\n                menuItemListener(clickeElIsLink);\r\n            } else {\r\n                var button = e.which || e.button;\r\n                if (button === 1) {\r\n                    toggleMenuOff();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listens for keyup events.\r\n     */\r\n    function keyupListener() {\r\n        window.onkeyup = function (e) {\r\n            if (e.keyCode === 27) {\r\n                toggleMenuOff();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Window resize event listener\r\n     */\r\n    function resizeListener() {\r\n        window.onresize = function (e) {\r\n            toggleMenuOff();\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Turns the custom context menu on.\r\n     */\r\n    function toggleMenuOn(itemLabel) {\r\n        if (menuState !== 1) {\r\n            console.log(\"toggling on context menu...\");\r\n            restrictContextItems(itemLabel);\r\n            menuState = 1;\r\n            menu.classList.add(contextMenuActive);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Turns the custom context menu off.\r\n     */\r\n    function toggleMenuOff() {\r\n        if (menuState !== 0) {\r\n            menuState = 0;\r\n            menu.classList.remove(contextMenuActive);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Positions the menu properly.\r\n     * \r\n     * @param {Object} e The event\r\n     */\r\n    function positionMenu(e) {\r\n        clickCoords = getPosition(e);\r\n        clickCoordsX = clickCoords.x;\r\n\t\t// console.log('TCL: positionMenu -> clickCoordsX', clickCoordsX);\r\n        clickCoordsY = clickCoords.y;\r\n\t\t// console.log('TCL: positionMenu -> clickCoordsY', clickCoordsY);\r\n\r\n        menuWidth = menu.offsetWidth + 4;\r\n        menuHeight = menu.offsetHeight + 4;\r\n\r\n        // Full document height because position of menu is absolute\r\n        // see here: https://javascript.info/coordinates#document-coordinates\r\n        windowWidth = document.documentElement.offsetWidth;\r\n        windowHeight = document.documentElement.offsetHeight;\r\n\r\n        if ((windowWidth - clickCoordsX) < menuWidth) {\r\n            menu.style.left = windowWidth - menuWidth + \"px\";\r\n        } else {\r\n            menu.style.left = clickCoordsX + \"px\";\r\n        }\r\n\r\n        if ((windowHeight - clickCoordsY) < menuHeight) {\r\n            menu.style.top = windowHeight - menuHeight + \"px\";\r\n        } else {\r\n            menu.style.top = clickCoordsY + \"px\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dummy action function that logs an action when a menu item link is clicked\r\n     * \r\n     * @param {HTMLElement} link The link that was clicked\r\n     */\r\n    function menuItemListener(link) {\r\n        console.log(\"Task ID - \" + taskItemInContext.getAttribute(\"data-id\") + \", Task action - \" + link.getAttribute(\"data-action\"));\r\n        toggleMenuOff();\r\n    }\r\n\r\n    /**\r\n     * Run the app.\r\n     */\r\n    init();\r\n\r\n})();"]}