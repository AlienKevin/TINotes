{"version":3,"sources":["load.js"],"names":["dynamicallyLoadScripts","urls","length","promise","dynamicallyLoadScript","slice","forEach","url","then","Promise","resolve","reject","script","document","createElement","src","onload","console","log","onerror","Error","body","appendChild","window","addEventListener","event","error","reason","fallback","load","page_css","global_css","swal","Mousetrap","introJs","Guppy","GuppyOSK","Algebrite","localForge","ready"],"mappings":"AA2DQ,SAASA,uBAAuBC,GAC5B,GAAoB,IAAhBA,EAAKC,OACL,OAEJ,IAAIC,EAAUC,sBAAsBH,EAAK,IACzCA,EAAKI,MAAM,GAAGC,QAAQC,IAClBJ,EAAUA,EAAQK,KAAK,IAAMJ,sBAAsBG,MAI3D,SAASH,sBAAsBG,GAC3B,OAAO,IAAIE,QAAQ,SAASC,EAASC,GACrC,IAAIC,EAASC,SAASC,cAAc,UACpCF,EAAOG,IAAMR,EACbK,EAAOI,OAAS,MAAON,EAAQE,GAASK,QAAQC,OAAOX,eACvDK,EAAOO,QAAU,KAAMR,EAAO,IAAIS,4BAA4Bb,QAC9DM,SAASQ,KAAKC,YAAYV,KA1EtCW,OAAOC,iBAAiB,qBAAsB,SAASC,GAEnDR,QAAQS,MAAMD,EAAMtB,SACpBc,QAAQS,MAAMD,EAAME,UAGxBC,SAASC,MAEGC,SAAU,kCACVC,WAAY,8BAIZC,MACI,gDACA,oCACA,oCAIJC,WACI,oEACA,kCAKJC,SACI,8DACA,+DACA,4BAGJC,OACI,gCACA,yBAEJC,UACI,oCACA,6BAEJC,WACI,mFAEJC,YACI,sEAGRV,SAASW,MAAM,WAOXvC,wBALI,mBACA,oBAAqB,uBAAwB,yBAC5C,0BAA2B,4BAA6B,mBACxD,wBAAyB","file":"../../TextReader/js/load.js","sourcesContent":["// Handle rejected promises\r\nwindow.addEventListener('unhandledrejection', function(event) {\r\n    // the event object has two special properties:\r\n    console.error(event.promise);// the promise that generated the error\r\n    console.error(event.reason); // the unhandled error object\r\n  });\r\n// Here we actually invoke Fallback JS to retrieve the following libraries for the page.\r\nfallback.load({\r\n            // Include your stylesheets, this can be an array of stylesheets or a string!\r\n            page_css: 'lib/fontawesome/css/all.min.css', // load local font awesome library\r\n            global_css: 'lib/introjs/introjs.min.css',  // load introjs css\r\n\r\n            // JavaScript library. THE KEY MUST BE THE LIBRARIES WINDOW VARIABLE!\r\n            // load sweet alert for beautiful popups: https://github.com/t4t5/sweetalert\r\n            'swal': [\r\n                '//unpkg.com/sweetalert/dist/sweetalert.min.js',\r\n                '//cdn.jsdelivr.net/npm/sweetalert',\r\n                'lib/sweetalert/sweetalert.min.js'\r\n            ],\r\n\r\n            // load Mousetrap for keyboard shortcuts: https://github.com/ccampbell/mousetrap\r\n            'Mousetrap': [\r\n                '//cdnjs.cloudflare.com/ajax/libs/mousetrap/1.6.2/mousetrap.min.js',\r\n                'lib/mousetrap/mousetrap.min.js',\r\n            ],\r\n\r\n            // load introjs for step-by-step introduction to my web app:\r\n            // https://github.com/usablica/intro.js\r\n            'introJs': [\r\n                '//cdn.jsdelivr.net/npm/intro.js@2.9.3/minified/intro.min.js',\r\n                '//cdnjs.cloudflare.com/ajax/libs/intro.js/2.9.3/intro.min.js',\r\n                'lib/introjs/intro.min.js'\r\n            ],\r\n\r\n            'Guppy': [\r\n                '//guppy.js.org/build/guppy.js',\r\n                'lib/guppy-js/guppy.js',\r\n            ],\r\n            'GuppyOSK': [\r\n                '//guppy.js.org/build/guppy_osk.js',\r\n                'lib/guppy-js/guppy_osk.js',\r\n            ],\r\n            'Algebrite': [\r\n                '//cdn.jsdelivr.net/npm/algebrite@1.2.0/dist/algebrite.bundle-for-browser.min.js',\r\n            ],\r\n            'localForge': [\r\n                '//cdn.jsdelivr.net/npm/localforage@1.7.3/dist/localforage.min.js',\r\n            ],\r\n        }); \r\n        fallback.ready(function () {\r\n            const scripts = [\r\n                \"dist/js/utils.js\",\r\n                \"dist/js/script.js\", \"dist/js/equations.js\", \"dist/js/contextMenu.js\",\r\n                 \"TI-BASIC/baseScript.txt\", \"dist/js/generateScript.js\", \"dist/js/popup.js\", \r\n                 \"dist/js/introSteps.js\", \"dist/js/notebookMenu.js\",\r\n            ];\r\n            dynamicallyLoadScripts(scripts);\r\n        });\r\n\r\n        function dynamicallyLoadScripts(urls){\r\n            if (urls.length === 0){\r\n                return;\r\n            }\r\n            let promise = dynamicallyLoadScript(urls[0]);\r\n            urls.slice(1).forEach(url => {\r\n                promise = promise.then(() => dynamicallyLoadScript(url));\r\n            });\r\n        }\r\n\r\n        function dynamicallyLoadScript(url) {\r\n            return new Promise(function(resolve, reject) {\r\n            var script = document.createElement(\"script\"); // create a script DOM node\r\n            script.src = url; // set its src to the provided URL\r\n            script.onload = () => {resolve(script); console.log(`${url} loaded!`)};\r\n            script.onerror = () => reject(new Error(`Error when loading ${url}!`));\r\n            document.body.appendChild(script); // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\r\n        });\r\n    }"]}