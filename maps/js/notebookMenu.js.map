{"version":3,"sources":["notebookMenu.js"],"names":["toggleBtn","document","querySelector","sidebar","getElementById","notebookMenu","addNotebookBtn","addEventListener","event","preventDefault","classList","toggle","defaultNotebookName","notebookNameList","addDefaultNotebook","setNotebookInStorage","getCurrentNotebook","displayNotebookLabel","push","loadNotebooks","localforage","iterate","notebook","notebookName","catch","err","console","log","Object","keys","localStorage","forEach","key","getItemFromStorage","renameNotebook","notebookLabel","oldNotebookName","innerHTML","notebookNameInput","createItemNameInput","insertAfter","focus","remove","e","keyCode","newNotebookName","value","indexOf","createErrorMessage","replaceElementInArray","renameNotebookInStorage","labelPosition","createElement","add","setAttribute","textContent","appendChild","getNotebookFromStorage","then","removeNotebookFromStorage","removeNotebook","getAttribute","removeElementInArray","removeItem","getItem","setItem","countNotebooks","length","notebookSize"],"mappings":"AAAA,MAAMA,UAAYC,SAASC,cAAc,8BACnCC,QAAUF,SAASG,eAAe,WAClCC,aAAeF,QAAQD,cAAc,MACrCI,eAAiBL,SAASG,eAAe,kBAC/CJ,UAAUO,iBAAiB,QAAUC,IACjCA,EAAMC,iBACNN,QAAQO,UAAUC,OAAO,UACzBX,UAAUU,UAAUC,OAAO,YAE/B,MAAMC,oBAAsB,YACtBC,oBAcN,SAASC,qBAELC,qBAAqBH,oBAAqBI,sBAE1CC,qBAAqBL,qBACrBC,iBAAiBK,KAAKN,qBAG1B,SAASO,gBACLC,YAAYC,QAAQ,SAAUC,EAAUC,GACpCV,iBAAiBK,KAAKK,GACtBN,qBAAqBM,KACtBC,MAAM,SAAUC,GACfC,QAAQC,IAAIF,KAIpB,SAAST,qBACL,MAAMM,KAKN,OAJAM,OAAOC,KAAKC,cAAcC,QAAQC,IAC9BN,QAAQC,IAAI,WAAYK,GACxBV,EAASU,GAAOC,mBAAmBD,KAEhCV,EAGX,SAASY,eAAeC,GACpB,MAAMC,EAAkBD,EAAcE,UAChCC,EAAoBC,oBAAoB,YAC9CC,YAAYL,EAAeG,GAC3BA,EAAkBG,QAClBN,EAAcO,SACdJ,EAAkB/B,iBAAiB,WAAaoC,IAC5C,GAAiB,IAAbA,EAAEC,QAAe,CACjB,MAAMC,EAAkBP,EAAkBQ,MACtCjC,iBAAiBkC,QAAQF,IAAoB,GAAKA,IAAoBT,EACtEY,mBAAmBV,EACf,6BAEJW,sBAAsBpC,iBAAkBuB,EAAiBS,GACzDK,wBAAwBd,EAAiBS,GACzC5B,qBAAqB4B,EAAiBP,GAEtCA,EAAkBI,aAMlC,SAASzB,qBAAqBM,EAAc4B,GACxC,MAAMhB,EAAgBlC,SAASmD,cAAc,MAC7CjB,EAAczB,UAAU2C,IAAI,QAC5BlB,EAAczB,UAAU2C,IAAI,YAC5BlB,EAAcmB,aAAa,YAAa/B,GACxCY,EAAcoB,YAAchC,EACxB4B,EACAX,YAAYW,EAAehB,GAE3B9B,aAAamD,YAAYrB,GAIjC,SAASe,wBAAwBd,EAAiBS,GAC9CY,uBAAuBrB,GAClBsB,KAAMpC,GAAaP,qBAAqB8B,EAAiBvB,IAC9DqC,0BAA0BvB,GAG9B,SAASwB,eAAezB,GACpB,MAAMZ,EAAeY,EAAc0B,aAAa,aAChDF,0BAA0BpC,GAC1BuC,qBAAqBjD,iBAAkBU,GACvCY,EAAcO,SAGlB,SAASiB,0BAA0BpC,GAC/BH,YAAY2C,WAAWxC,GAAcC,MAAM,SAAUC,GACjDC,QAAQC,IAAIF,KAIpB,SAASgC,uBAAuBlC,GAC5B,OAAOH,YAAY4C,QAAQzC,GAG/B,SAASR,qBAAqBQ,EAAcD,GACxCF,YAAY6C,QAAQ1C,EAAcD,GAAUE,MAAMC,IAC9CC,QAAQC,IAAIF,KAIpB,SAASyC,iBACL,OAAO9C,YAAY+C,SAxGvBD,iBAAiBR,KAAMU,IACtB1C,QAAQC,IAAI,oBAAqByC,GAC1BA,EAAe,EAEfjD,gBAGAL","file":"../../TextReader/js/notebookMenu.js","sourcesContent":["const toggleBtn = document.querySelector('#hamburger-icon.toggle-btn');\r\nconst sidebar = document.getElementById(\"sidebar\");\r\nconst notebookMenu = sidebar.querySelector(\"ul\");\r\nconst addNotebookBtn = document.getElementById(\"addNotebookBtn\");\r\ntoggleBtn.addEventListener(\"click\", (event) => {\r\n    event.preventDefault(); // prevent scrolling up to top\r\n    sidebar.classList.toggle(\"active\");\r\n    toggleBtn.classList.toggle(\"active\");\r\n});\r\nconst defaultNotebookName = \"notebook1\";\r\nconst notebookNameList = [];\r\n\r\ncountNotebooks().then((notebookSize) => {\r\n\tconsole.log('TCL: notebookSize', notebookSize);\r\n    if (notebookSize > 0) {\r\n        // load notebooks in storage\r\n        loadNotebooks();\r\n    } else{\r\n        // add default notebook\r\n        addDefaultNotebook();\r\n    }\r\n});\r\n\r\n// display and store the default notebook\r\nfunction addDefaultNotebook() {\r\n    // store the default book\r\n    setNotebookInStorage(defaultNotebookName, getCurrentNotebook());\r\n    // display the default notebook\r\n    displayNotebookLabel(defaultNotebookName);\r\n    notebookNameList.push(defaultNotebookName);\r\n}\r\n\r\nfunction loadNotebooks() {\r\n    localforage.iterate(function (notebook, notebookName) {\r\n        notebookNameList.push(notebookName);\r\n        displayNotebookLabel(notebookName);\r\n    }).catch(function (err) {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nfunction getCurrentNotebook() {\r\n    const notebook = {};\r\n    Object.keys(localStorage).forEach(key => {\r\n        console.log('TCL: key', key);\r\n        notebook[key] = getItemFromStorage(key);\r\n    })\r\n    return notebook;\r\n}\r\n\r\nfunction renameNotebook(notebookLabel) {\r\n    const oldNotebookName = notebookLabel.innerHTML;\r\n    const notebookNameInput = createItemNameInput(\"notebook\");\r\n    insertAfter(notebookLabel, notebookNameInput);\r\n    notebookNameInput.focus();\r\n    notebookLabel.remove();\r\n    notebookNameInput.addEventListener(\"keypress\", (e) => {\r\n        if (e.keyCode == 13) { // ENTER key\r\n            const newNotebookName = notebookNameInput.value;\r\n            if (notebookNameList.indexOf(newNotebookName) >= 0 && newNotebookName !== oldNotebookName) { // repeated name\r\n                createErrorMessage(notebookNameInput,\r\n                    `Duplicated notebook name`);\r\n            } else {\r\n                replaceElementInArray(notebookNameList, oldNotebookName, newNotebookName);\r\n                renameNotebookInStorage(oldNotebookName, newNotebookName);\r\n                displayNotebookLabel(newNotebookName, notebookNameInput);\r\n                // remove item name input\r\n                notebookNameInput.remove();\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction displayNotebookLabel(notebookName, labelPosition) {\r\n    const notebookLabel = document.createElement(\"li\");\r\n    notebookLabel.classList.add(\"item\");\r\n    notebookLabel.classList.add(\"notebook\");\r\n    notebookLabel.setAttribute(\"data-name\", notebookName);\r\n    notebookLabel.textContent = notebookName;\r\n    if (labelPosition) {\r\n        insertAfter(labelPosition, notebookLabel);\r\n    } else {\r\n        notebookMenu.appendChild(notebookLabel);\r\n    }\r\n}\r\n\r\nfunction renameNotebookInStorage(oldNotebookName, newNotebookName) {\r\n    getNotebookFromStorage(oldNotebookName)\r\n        .then((notebook) => setNotebookInStorage(newNotebookName, notebook));\r\n    removeNotebookFromStorage(oldNotebookName);\r\n}\r\n\r\nfunction removeNotebook(notebookLabel){\r\n    const notebookName = notebookLabel.getAttribute(\"data-name\");\r\n    removeNotebookFromStorage(notebookName);\r\n    removeElementInArray(notebookNameList, notebookName);\r\n    notebookLabel.remove();\r\n}\r\n\r\nfunction removeNotebookFromStorage(notebookName) {\r\n    localforage.removeItem(notebookName).catch(function (err) {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nfunction getNotebookFromStorage(notebookName) {\r\n    return localforage.getItem(notebookName);\r\n}\r\n\r\nfunction setNotebookInStorage(notebookName, notebook) {\r\n    localforage.setItem(notebookName, notebook).catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nfunction countNotebooks() {\r\n    return localforage.length();\r\n}"]}