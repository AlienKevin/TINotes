{"version":3,"sources":["notebookMenu.js"],"names":["toggleBtn","document","querySelector","sidebar","getElementById","notebookMenu","addNotebookBtn","currentNotebookName","addEventListener","event","preventDefault","classList","toggle","defaultNotebookName","notebookNameList","selected","setSelectedNotebook","notebookName","remove","add","addDefaultNotebook","setNotebookInStorage","getCurrentNotebook","displayNotebookLabel","push","loadNotebooks","localforage","iterate","notebook","catch","err","console","log","Object","keys","localStorage","forEach","key","getItemFromStorage","renameNotebook","notebookLabel","oldNotebookName","innerHTML","notebookNameInput","createItemNameInput","insertAfter","focus","e","keyCode","newNotebookName","value","indexOf","createErrorMessage","replaceElementInArray","renameNotebookInStorage","labelPosition","createElement","setAttribute","textContent","appendChild","getNotebookFromStorage","then","removeNotebookFromStorage","removeNotebook","getAttribute","removeElementInArray","clearCurrentNotebook","clearAllItems","clear","removeItem","getItem","setItem","countNotebooks","length","notebookSize","target","contains"],"mappings":"AAAA,MAAMA,UAAYC,SAASC,cAAc,8BACnCC,QAAUF,SAASG,eAAe,WAClCC,aAAeF,QAAQD,cAAc,MACrCI,eAAiBL,SAASG,eAAe,kBAM/C,IAAIG,oBALJP,UAAUQ,iBAAiB,QAAUC,IACjCA,EAAMC,iBACNP,QAAQQ,UAAUC,OAAO,UACzBZ,UAAUW,UAAUC,OAAO,YAG/B,MAAMC,oBAAsB,YACtBC,oBACN,IAAIC,SAAWF,oBAuBf,SAASG,oBAAoBC,GACzBF,SAAWE,EACiBZ,aAAaH,cAAc,eACnCS,UAAUO,OAAO,YACpBb,aAAaH,+BAA+Be,MACpDN,UAAUQ,IAAI,YAI3B,SAASC,qBAELC,qBAAqBR,oBAAqBS,sBAE1CC,qBAAqBV,qBACrBC,iBAAiBU,KAAKX,qBACtBN,oBAAsBM,oBAEtBG,oBAAoBH,qBAGxB,SAASY,gBACLC,YAAYC,QAAQ,SAAUC,EAAUX,GACpCH,iBAAiBU,KAAKP,GACtBM,qBAAqBN,KACtBY,MAAM,SAAUC,GACfC,QAAQC,IAAIF,KAIpB,SAASR,qBACL,MAAMM,KAKN,OAJAK,OAAOC,KAAKC,cAAcC,QAAQC,IAC9BN,QAAQC,IAAI,WAAYK,GACxBT,EAASS,GAAOC,mBAAmBD,KAEhCT,EAGX,SAASW,eAAeC,GACpB,MAAMC,EAAkBD,EAAcE,UAChCC,EAAoBC,oBAAoB,YAC9CC,YAAYL,EAAeG,GAC3BA,EAAkBG,QAClBN,EAActB,SACdyB,EAAkBnC,iBAAiB,WAAauC,IAC5C,GAAiB,IAAbA,EAAEC,QAAe,CACjB,MAAMC,EAAkBN,EAAkBO,MACtCpC,iBAAiBqC,QAAQF,IAAoB,GAAKA,IAAoBR,EACtEW,mBAAmBT,EACf,6BAEJU,sBAAsBvC,iBAAkB2B,EAAiBQ,GACzDK,wBAAwBb,EAAiBQ,GACzC1B,qBAAqB0B,EAAiBN,GAEtCA,EAAkBzB,SAElBF,oBAAoBiC,OAMpC,SAAS1B,qBAAqBN,EAAcsC,GACxC,MAAMf,EAAgBvC,SAASuD,cAAc,MAC7ChB,EAAc7B,UAAUQ,IAAI,QAC5BqB,EAAc7B,UAAUQ,IAAI,YAC5BqB,EAAciB,aAAa,YAAaxC,GACxCuB,EAAckB,YAAczC,EACxBsC,EACAV,YAAYU,EAAef,GAE3BnC,aAAasD,YAAYnB,GAIjC,SAASc,wBAAwBb,EAAiBQ,GAC9CW,uBAAuBnB,GAClBoB,KAAMjC,GAAaP,qBAAqB4B,EAAiBrB,IAC9DkC,0BAA0BrB,GAG9B,SAASsB,eAAevB,GACpB,MAAMvB,EAAeuB,EAAcwB,aAAa,aAChDF,0BAA0B7C,GAC1BgD,qBAAqBnD,iBAAkBG,GACvCuB,EAActB,SACVX,sBAAwBU,GACxBiD,uBAKR,SAASA,uBACLC,gBACAhC,aAAaiC,QAGjB,SAASN,0BAA0B7C,GAC/BS,YAAY2C,WAAWpD,GAAcY,MAAM,SAAUC,GACjDC,QAAQC,IAAIF,KAIpB,SAAS8B,uBAAuB3C,GAC5B,OAAOS,YAAY4C,QAAQrD,GAG/B,SAASI,qBAAqBJ,EAAcW,GACxCF,YAAY6C,QAAQtD,EAAcW,GAAUC,MAAMC,IAC9CC,QAAQC,IAAIF,KAIpB,SAAS0C,iBACL,OAAO9C,YAAY+C,SAxIvBD,iBAAiBX,KAAMa,IACtB3C,QAAQC,IAAI,oBAAqB0C,GAC1BA,EAAe,EAEfjD,gBAGAL,uBAKRf,aAAaG,iBAAiB,QAAUuC,IACpC,MAAM4B,EAAS5B,EAAE4B,OACjB,GAAIA,EAAOhE,UAAUiE,SAAS,YAAY,CACtCD,EAAOhE,UAAUQ,IAAI,YAErBH,oBAD6B2D,EAAOX,aAAa","file":"../../TextReader/js/notebookMenu.js","sourcesContent":["const toggleBtn = document.querySelector('#hamburger-icon.toggle-btn');\r\nconst sidebar = document.getElementById(\"sidebar\");\r\nconst notebookMenu = sidebar.querySelector(\"ul\");\r\nconst addNotebookBtn = document.getElementById(\"addNotebookBtn\");\r\ntoggleBtn.addEventListener(\"click\", (event) => {\r\n    event.preventDefault(); // prevent scrolling up to top\r\n    sidebar.classList.toggle(\"active\");\r\n    toggleBtn.classList.toggle(\"active\");\r\n});\r\nlet currentNotebookName;\r\nconst defaultNotebookName = \"notebook1\";\r\nconst notebookNameList = [];\r\nlet selected = defaultNotebookName; // store the selected notebook name\r\n\r\ncountNotebooks().then((notebookSize) => {\r\n\tconsole.log('TCL: notebookSize', notebookSize);\r\n    if (notebookSize > 0) {\r\n        // load notebooks in storage\r\n        loadNotebooks();\r\n    } else{\r\n        // add default notebook\r\n        addDefaultNotebook();\r\n    }\r\n});\r\n\r\n// select notebook on click\r\nnotebookMenu.addEventListener(\"click\", (e) => {\r\n    const target = e.target;\r\n    if (target.classList.contains(\"notebook\")){\r\n        target.classList.add(\"selected\");\r\n        const selectedNotebookName = target.getAttribute(\"data-name\");\r\n        setSelectedNotebook(selectedNotebookName);\r\n    }\r\n});\r\n\r\nfunction setSelectedNotebook(notebookName){\r\n    selected = notebookName;\r\n    const oldSelectedNotebook = notebookMenu.querySelector(`li.selected`);\r\n    oldSelectedNotebook.classList.remove(\"selected\");\r\n    const notebook = notebookMenu.querySelector(`li[data-name=\"${notebookName}\"`);\r\n    notebook.classList.add(\"selected\");\r\n}\r\n\r\n// display and store the default notebook\r\nfunction addDefaultNotebook() {\r\n    // store the default book\r\n    setNotebookInStorage(defaultNotebookName, getCurrentNotebook());\r\n    // display the default notebook\r\n    displayNotebookLabel(defaultNotebookName);\r\n    notebookNameList.push(defaultNotebookName);\r\n    currentNotebookName = defaultNotebookName;\r\n    // set selected notebook to the default one\r\n    setSelectedNotebook(defaultNotebookName);\r\n}\r\n\r\nfunction loadNotebooks() {\r\n    localforage.iterate(function (notebook, notebookName) {\r\n        notebookNameList.push(notebookName);\r\n        displayNotebookLabel(notebookName);\r\n    }).catch(function (err) {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nfunction getCurrentNotebook() {\r\n    const notebook = {};\r\n    Object.keys(localStorage).forEach(key => {\r\n        console.log('TCL: key', key);\r\n        notebook[key] = getItemFromStorage(key);\r\n    })\r\n    return notebook;\r\n}\r\n\r\nfunction renameNotebook(notebookLabel) {\r\n    const oldNotebookName = notebookLabel.innerHTML;\r\n    const notebookNameInput = createItemNameInput(\"notebook\");\r\n    insertAfter(notebookLabel, notebookNameInput);\r\n    notebookNameInput.focus();\r\n    notebookLabel.remove();\r\n    notebookNameInput.addEventListener(\"keypress\", (e) => {\r\n        if (e.keyCode == 13) { // ENTER key\r\n            const newNotebookName = notebookNameInput.value;\r\n            if (notebookNameList.indexOf(newNotebookName) >= 0 && newNotebookName !== oldNotebookName) { // repeated name\r\n                createErrorMessage(notebookNameInput,\r\n                    `Duplicated notebook name`);\r\n            } else {\r\n                replaceElementInArray(notebookNameList, oldNotebookName, newNotebookName);\r\n                renameNotebookInStorage(oldNotebookName, newNotebookName);\r\n                displayNotebookLabel(newNotebookName, notebookNameInput);\r\n                // remove item name input\r\n                notebookNameInput.remove();\r\n                // rename selected notebook\r\n                setSelectedNotebook(newNotebookName);\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction displayNotebookLabel(notebookName, labelPosition) {\r\n    const notebookLabel = document.createElement(\"li\");\r\n    notebookLabel.classList.add(\"item\");\r\n    notebookLabel.classList.add(\"notebook\");\r\n    notebookLabel.setAttribute(\"data-name\", notebookName);\r\n    notebookLabel.textContent = notebookName;\r\n    if (labelPosition) {\r\n        insertAfter(labelPosition, notebookLabel);\r\n    } else {\r\n        notebookMenu.appendChild(notebookLabel);\r\n    }\r\n}\r\n\r\nfunction renameNotebookInStorage(oldNotebookName, newNotebookName) {\r\n    getNotebookFromStorage(oldNotebookName)\r\n        .then((notebook) => setNotebookInStorage(newNotebookName, notebook));\r\n    removeNotebookFromStorage(oldNotebookName);\r\n}\r\n\r\nfunction removeNotebook(notebookLabel){\r\n    const notebookName = notebookLabel.getAttribute(\"data-name\");\r\n    removeNotebookFromStorage(notebookName);\r\n    removeElementInArray(notebookNameList, notebookName);\r\n    notebookLabel.remove();\r\n    if (currentNotebookName === notebookName){\r\n        clearCurrentNotebook();\r\n    }\r\n}\r\n\r\n// Remove all items from storage and delete all labels!!!\r\nfunction clearCurrentNotebook(){\r\n    clearAllItems();\r\n    localStorage.clear();\r\n}\r\n\r\nfunction removeNotebookFromStorage(notebookName) {\r\n    localforage.removeItem(notebookName).catch(function (err) {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nfunction getNotebookFromStorage(notebookName) {\r\n    return localforage.getItem(notebookName);\r\n}\r\n\r\nfunction setNotebookInStorage(notebookName, notebook) {\r\n    localforage.setItem(notebookName, notebook).catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nfunction countNotebooks() {\r\n    return localforage.length();\r\n}"]}