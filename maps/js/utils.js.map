{"version":3,"sources":["utils.js"],"names":["deleteStrInArray","str","array","i","length","splice","findClosingBracketMatchIndex","pos","Error","depth","isConstant","equation","value","nerdamer","evaluate","text","isFinite","e","removeAllChildren","element","firstChild","removeChild","removeElementInArray","replaceElementInArray","oldElement","newElement","insertAfter","referenceNode","newNode","parentNode","insertBefore","nextSibling","insertSubstring","index","insertedString","deleteLength","slice","deleteSubstring","clone","obj","JSON","parse","stringify","RegExp","escape","s","replace"],"mappings":"AAGA,SAASA,iBAAiBC,EAAKC,GAC3B,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,GAAK,EAAGA,IAC/BD,EAAMC,KAAOF,GACbC,EAAMG,OAAOF,EAAG,GAK5B,SAASG,6BAA6BL,EAAKM,GACvC,GAAgB,KAAZN,EAAIM,GACJ,MAAM,IAAIC,MAAM,mBAAqBD,GAEzC,IAAIE,EAAQ,EACZ,IAAK,IAAIN,EAAII,EAAM,EAAGJ,EAAIF,EAAIG,OAAQD,IAClC,OAAQF,EAAIE,IACR,IAAK,IACDM,IACA,MACJ,IAAK,IACD,GAAe,KAATA,EACF,OAAON,EAKvB,OAAQ,EAIZ,SAASO,WAAWC,GAChB,IACI,MAAMC,EAAQC,SAASF,GAAUG,WAAWC,OAC5C,OAAOC,SAASJ,GAClB,MAAOK,GACL,OAAO,GAcf,SAASC,kBAAkBC,GACvB,KAAOA,EAAQC,YACXD,EAAQE,YAAYF,EAAQC,YAQpC,SAASE,qBAAqBpB,EAAOiB,GACjC,IAAK,IAAIhB,EAAID,EAAME,OAAS,EAAGD,GAAK,EAAGA,IACnC,GAAID,EAAMC,KAAOgB,EAAS,CACtBjB,EAAMG,OAAOF,EAAG,GAChB,OASZ,SAASoB,sBAAsBrB,EAAOsB,EAAYC,GAC9C,IAAK,IAAItB,EAAID,EAAME,OAAS,EAAGD,GAAK,EAAGA,IACnC,GAAID,EAAMC,KAAOqB,EAAY,CACzBtB,EAAMG,OAAOF,EAAG,EAAGsB,GACnB,OAMZ,SAASC,YAAYC,EAAeC,GAChCD,EAAcE,WAAWC,aAAaF,EAASD,EAAcI,aAGjE,SAASC,gBAAgB/B,EAAKgC,EAAOC,EAAgBC,EAAe,GAChE,OAAOlC,EAAImC,MAAM,EAAGH,GAASC,EAAiBjC,EAAImC,MAAMH,EAAQE,GAGpE,SAASE,gBAAgBpC,EAAKgC,EAAOE,EAAe,GAChD,OAAOH,gBAAgB/B,EAAKgC,EAAO,GAAIE,GAM3C,SAASG,MAAMC,GACX,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAvDrCI,OAAOC,OAAS,SAAUC,GACtB,OAAOA,EAAEC,QAAQ,yBAA0B","file":"../../TextReader/js/utils.js","sourcesContent":["/************************* From equations.js *************************/\r\n\r\n// Source: https://stackoverflow.com/a/9792947/6798201\r\nfunction deleteStrInArray(str, array) {\r\n    for (var i = array.length - 1; i >= 0; i--) {\r\n        if (array[i] === str) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction findClosingBracketMatchIndex(str, pos) {\r\n    if (str[pos] != '(') {\r\n        throw new Error(\"No '(' at index \" + pos);\r\n    }\r\n    let depth = 1;\r\n    for (let i = pos + 1; i < str.length; i++) {\r\n        switch (str[i]) {\r\n            case '(':\r\n                depth++;\r\n                break;\r\n            case ')':\r\n                if (--depth == 0) {\r\n                    return i;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return -1; // No matching closing parenthesis\r\n}\r\n\r\n// Check if an equation is a constant or not\r\nfunction isConstant(equation) {\r\n    try {\r\n        const value = nerdamer(equation).evaluate().text();\r\n        return isFinite(value);\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n/************************* From generateScript.js *************************/\r\n\r\n// source: https://stackoverflow.com/a/3561711/6798201\r\n// Escape all special characters in a regular expression string\r\nRegExp.escape = function (s) {\r\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n};\r\n\r\n/************************* From script.js *************************/\r\n\r\nfunction removeAllChildren(element) {\r\n    while (element.firstChild) {\r\n        element.removeChild(element.firstChild);\r\n    }\r\n}\r\n\r\n// Source: https://stackoverflow.com/a/9792947/6798201\r\n// Remove one element in array, only remove\r\n// the first occurance starting from the end of the array\r\n// uncomment break to remove all occurance\r\nfunction removeElementInArray(array, element) {\r\n    for (var i = array.length - 1; i >= 0; i--) {\r\n        if (array[i] === element) {\r\n            array.splice(i, 1);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n// Based on: https://stackoverflow.com/a/9792947/6798201\r\n// Replace one element in array with new element, only replace \r\n// the first occurance starting from the end of the array\r\n// uncomment break to replace all occurance\r\nfunction replaceElementInArray(array, oldElement, newElement) {\r\n    for (var i = array.length - 1; i >= 0; i--) {\r\n        if (array[i] === oldElement) {\r\n            array.splice(i, 1, newElement);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n// source: https://stackoverflow.com/a/4793630/6798201\r\nfunction insertAfter(referenceNode, newNode) {\r\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\r\n}\r\n\r\nfunction insertSubstring(str, index, insertedString, deleteLength = 0) {\r\n    return str.slice(0, index) + insertedString + str.slice(index + deleteLength);\r\n}\r\n\r\nfunction deleteSubstring(str, index, deleteLength = 0) {\r\n    return insertSubstring(str, index, \"\", deleteLength);\r\n}\r\n\r\n// Clone an object containing objects, arrays, strings, booleans and numbers\r\n// but not containing functions\r\n// Source: https://stackoverflow.com/a/10869248/6798201\r\nfunction clone(obj){\r\n    return JSON.parse(JSON.stringify(obj));\r\n}"]}